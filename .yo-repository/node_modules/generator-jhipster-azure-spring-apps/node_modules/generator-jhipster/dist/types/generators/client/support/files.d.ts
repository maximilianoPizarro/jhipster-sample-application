import type { WriteFileBlock } from '../../base/api.js';
import type CoreGenerator from '../../base-core/index.js';
import type { CommonClientServerApplication } from '../../base-application/types.js';
export declare const replaceEntityFilePath: (data: any, filepath: string) => string;
type RelativeWriteFileBlock = WriteFileBlock<CoreGenerator, CommonClientServerApplication & Record<string, any>> & {
    relativePath?: string;
};
export declare function clientRootTemplatesBlock(blockOrRelativePath?: string): Pick<WriteFileBlock, 'path' | 'renameTo'>;
export declare function clientRootTemplatesBlock(blockOrRelativePath: RelativeWriteFileBlock): WriteFileBlock;
export declare function clientSrcTemplatesBlock(blockOrRelativePath?: string): Pick<WriteFileBlock, 'path' | 'renameTo'>;
export declare function clientSrcTemplatesBlock(blockOrRelativePath: RelativeWriteFileBlock): WriteFileBlock;
export declare function clientApplicationTemplatesBlock(blockOrRelativePath?: string): Pick<WriteFileBlock, 'path' | 'renameTo'>;
export declare function clientApplicationTemplatesBlock(blockOrRelativePath: RelativeWriteFileBlock): WriteFileBlock;
export declare function clientTestTemplatesBlock(blockOrRelativePath?: string): Pick<WriteFileBlock, 'path' | 'renameTo'>;
export declare function clientTestTemplatesBlock(blockOrRelativePath: RelativeWriteFileBlock): WriteFileBlock;
export {};
